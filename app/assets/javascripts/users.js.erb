$(function () {
	// set drink delivery estimate variable
	var drink_delivery_estimate = gon.drink_delivery_estimate
	var new_drink_estimate = gon.new_drink_estimate
	var cooler_drink_estimate = gon.cooler_drink_estimate
    var cellar_drink_estimate = gon.cellar_drink_estimate
    var small_format_estimate = gon.small_format_estimate
    var large_format_estimate = gon.large_format_estimate
	
	// set delay function
	var delay = (function(){
	  var timer = 0;
	  return function(callback, ms){
	    clearTimeout (timer);
	    timer = setTimeout(callback, ms);
	  };
	})();
	
	// for new vs repeat slider
	$("#new_percentage").slider({
		tooltip: 'hide'
	});
	$("#new_percentage").on("change", function(slideEvt) {
		var new_value = slideEvt.value.newValue;
		var repeat_value = (100 - new_value);
		$("#new-preference").text(new_value);
		$("#new-preference-2").text(new_value);
		$("#repeat-preference").text(repeat_value);
		
		// set estimate value
		if (drink_delivery_estimate != 0) {
			var new_drink_estimate = Math.round((drink_delivery_estimate * new_value)/100)
			var new_drink_delivery_estimate = "~ " + new_drink_estimate + " will be new to you"
		} 
		// insert estimate value statement	
		$("#new_drink_estimate").text(new_drink_delivery_estimate);
		
		// send data to controller
		delay(function(){
			$.ajax({
			  type: "POST",
			  url: "/users/update_delivery/new_percentage-" + new_value
			});
	    }, 1000 );
	});
	
	// for cooler vs cellar slider
	$("#cooler_percentage").slider({
		tooltip: 'hide'
	});
	$("#cooler_percentage").on("change", function(slideEvt) {
		var cooler_value = slideEvt.value.newValue;
		var cellar_value = (100 - cooler_value);
		$("#cooler-preference").text(cooler_value);
		$("#cooler-preference-2").text(cooler_value);
		$("#cellar-preference").text(cellar_value);
		
		// set estimate value
		if (drink_delivery_estimate != 0) {
			var cooler_drink_estimate = Math.round((drink_delivery_estimate * cooler_value)/100)
			var cellar_drink_estimate = (drink_delivery_estimate - cooler_drink_estimate)
			var cooler_drink_delivery_estimate = "~ " + cooler_drink_estimate + " for your cooler; " + cellar_drink_estimate + " for your cellar"
		}
		// insert estimate value statement	
		$("#cooler_drink_estimate").text(cooler_drink_delivery_estimate);
		
		// send data to controller
		delay(function(){
			$.ajax({
			  type: "POST",
			  url: "/users/update_delivery/cooler_percentage-" + cooler_value
			});
	    }, 1000 );
	});
	
	// for small vs large format slider
	$("#small_percentage").slider({
		tooltip: 'hide'
	});
	$("#small_percentage").on("change", function(slideEvt) {
		var small_value = slideEvt.value.newValue;
		var large_value = (100 - small_value);
		$("#small-preference").text(small_value);
		$("#small-preference-2").text(small_value);
		$("#large-preference").text(large_value);
		
		// set estimate value
		if (drink_delivery_estimate != 0) {
			var small_format_estimate = Math.round((drink_delivery_estimate * small_value)/100)
			var large_format_estimate = (drink_delivery_estimate - small_format_estimate)
			var small_format_delivery_estimate = "~ " + small_format_estimate + " in small format; " + large_format_estimate + " in large"
		}
		// insert estimate value statement	
		$("#small_format_estimate").text(small_format_delivery_estimate);
		
		// send data to controller
		delay(function(){
			$.ajax({
			  type: "POST",
			  url: "/users/update_delivery/small_format_percentage-" + small_value
			});
	    }, 1000 );
	});
	
	// send drinks/week delivery preference to controller
	$("#delivery_preference_drinks_per_week").on("change", function() {
		var drinks_per_week = $(this).val();
		$.ajax({
		  type: "POST",
		  url: "/users/update_delivery/drinks_per_week-" + drinks_per_week
		});
	});
	
	// send max drinks in cellar delivery preference to controller
	$("#delivery_preference_drinks_in_cooler").on("change", function() {
		var drinks_in_cooler = $(this).val();
		$.ajax({
		  type: "POST",
		  url: "/users/update_delivery/drinks_in_cooler-" + drinks_in_cooler
		});
	});
	
	// send additional delivery preferences to controller
	$(document).on("keyup", "#delivery_preference_additional", function() {
		var additional = $(this).val();
		delay(function(){
			alert(additional);
			$.ajax({
			  type: "POST",
			  url: "/users/update_delivery/additional-" + additional
			});
	    }, 1000 );
		
	});
	
	// get width of estimate column
	estimate_column_width = $("#estimate-column").width();
	// make estimate tile holder same width as column
	$("#scroller").width(estimate_column_width);
	
	// set function for sticky scroller
	function moveScroller() {
	    var move = function() {
	        var st = $(window).scrollTop() + $('.navbar.navbar-default.navbar-fixed-top.homeNavbar').outerHeight() + 5;
	        var ot = $("#scroller-anchor").offset().top;
	        var s = $("#scroller");
	        if(st > ot) {
	            s.css({
	                position: "fixed",
	                top: "100px"
	            });
	        } else {
	            if(st <= ot) {
	                s.css({
	                    position: "relative",
	                    top: ""
	                });
	            }
	        }
	    };
	    $(window).scroll(move);
	    move();
	}
	$(document).on("scroll", function() {
	    moveScroller();
	});
	
	// send form id to session variable
	$(".fav-drink-field").one("focus", function() {
		var this_form_id = $(this).attr('id');
		$.ajax({
		  type: "POST",
		  url: "/users/set_search_box_id/" + this_form_id
		});
	});
	
	// remove fav drink
	$(".remove-fav-drink").on("click", function() {
		var this_form_id = $(this).parent().siblings(".fav-drink-form-holder").children("form").children("span").children(".form-control.typeahead.fav-drink-field.tt-input").attr('id');
		$(this).parent().siblings(".fav-drink-form-holder").children("form").children("span").children(".form-control.typeahead.fav-drink-field.tt-input").val('');
		$.ajax({
		  type: "POST",
		  url: "/users/remove_fav_drink/" + this_form_id
		});
		// prevent page from jumping to the top after click event
		return false;
	});
	
	// show user profile block when this link is clicked, if it isn't already showing
	$("#user-profile-link").on("click", function() {
		if ($("#user-profile").hasClass("hidden")) {
			$("#user-profile").removeClass("hidden").addClass("show");
			$("#user-notifications").removeClass("show").addClass("hidden");
			$("#user-profile-link").addClass("selected");
			$("#user-notifications-link").removeClass("selected");
		}
	});
	
	// if this link isn't already active, show underline when mouse over
	$("#user-profile-link").on("mouseover", function() {
		if ($("#user-profile").hasClass("hidden")) {
			$(this).css("text-decoration", "underline");
		}
	});
	
	// remove underline when mouse out	
	$("#user-profile-link").on("mouseout", function() {
		$(this).css("text-decoration", "none");
	});
	
	// show user profile block when this link is clicked, if it isn't already showing
	$("#user-notifications-link").on("click", function() {
		if ($("#user-notifications").hasClass("hidden")) {
			$("#user-notifications").removeClass("hidden").addClass("show");
			$("#user-profile").removeClass("show").addClass("hidden");
			$("#user-notifications-link").addClass("selected");
			$("#user-profile-link").removeClass("selected");
		}
	});
	
	// if this link isn't already active, show underline when mouse over
	$("#user-notifications-link").on("mouseover", function() {
		if ($("#user-notifications").hasClass("hidden")) {
			$(this).css("text-decoration", "underline");
		}
	});	
	
	// remove underline when mouse out
	$("#user-notifications-link").on("mouseout", function() {
		$(this).css("text-decoration", "none");
	});
	
	// show and hide password change form
	$("#change-password-button").on("click", function() {
		if ($(".password-change-form").hasClass("hidden")) {
			$(".password-change-form").removeClass("hidden").addClass("show");
		} else {
			$(".password-change-form").removeClass("show").addClass("hidden");
		}
	});
	
	// show user profile block when this link is clicked, if it isn't already showing
	$("#user-styles-link").on("click", function() {
		if ($("#user-styles").hasClass("hidden")) {
			$("#user-styles").removeClass("hidden").addClass("show");
			$("#user-drinks").removeClass("show").addClass("hidden");
			$("#user-styles-link").addClass("selected");
			$("#user-drinks-link").removeClass("selected");
		}
	});
	
	// if this link isn't already active, show underline when mouse over
	$("#user-styles-link").on("mouseover", function() {
		if ($("#user-styles").hasClass("hidden")) {
			$(this).css("text-decoration", "underline");
		}
	});
	
	// remove underline when mouse out	
	$("#user-styles-link").on("mouseout", function() {
		$(this).css("text-decoration", "none");
	});
	
	// show user profile block when this link is clicked, if it isn't already showing
	$("#user-drinks-link").on("click", function() {
		if ($("#user-drinks").hasClass("hidden")) {
			$("#user-drinks").removeClass("hidden").addClass("show");
			$("#user-styles").removeClass("show").addClass("hidden");
			$("#user-drinks-link").addClass("selected");
			$("#user-styles-link").removeClass("selected");
		}
	});
	
	// if this link isn't already active, show underline when mouse over
	$("#user-drinks-link").on("mouseover", function() {
		if ($("#user-drinks").hasClass("hidden")) {
			$(this).css("text-decoration", "underline");
		}
	});	
	
	// remove underline when mouse out
	$("#user-drinks-link").on("mouseout", function() {
		$(this).css("text-decoration", "none");
	});
	
	// allow user to dislike beer style
	$(".dislike-style").on("click", function() {
		var this_style_id = $(this).parent().attr('id');
		if ($(this).siblings(".dislike-style-chosen").hasClass("hidden")) {
			// change view/UI
			$(this).removeClass("show").addClass("hidden");
			$(this).siblings(".dislike-style-chosen").removeClass("hidden").addClass("show");
			// add overlay
			$(this).siblings(".overview-tile-4").addClass("show").removeClass("hidden");
			// if like is already chosen, reverse it
			if ($(this).siblings(".like-style-chosen").hasClass("show")) {
				$(this).siblings(".like-style-chosen").removeClass("show").addClass("hidden");	
			}
			if ($(this).siblings(".like-style").hasClass("hidden")) {
				$(this).siblings(".like-style").removeClass("hidden").addClass("show");
			}
		}
		$.ajax({
		  type: "POST",
		  url: "/users/update_styles_preferences/dislike-" + this_style_id
		});
		// prevent page from jumping to the top after click event
		return false;
	});
	
	// allow user to reverse dislike of beer style
	$(".dislike-style-chosen").on("click", function() {
		var this_style_id = $(this).parent().attr('id');
		if ($(this).hasClass("show")) {
			$(this).removeClass("show").addClass("hidden");
			$(this).siblings(".dislike-style").removeClass("hidden").addClass("show");
			// remove overlay
			$(this).siblings(".overview-tile-4").removeClass("show").addClass("hidden");
		}
		$.ajax({
		  type: "POST",
		  url: "/users/update_styles_preferences/neutral-" + this_style_id
		});
		// prevent page from jumping to the top after click event
		return false;
	});
	
	// allow user to like beer style
	$(".like-style").on("click", function() {
		var this_style_id = $(this).parent().attr('id');
		if ($(this).siblings(".like-style-chosen").hasClass("hidden")) {
			$(this).removeClass("show").addClass("hidden");
			$(this).siblings(".like-style-chosen").removeClass("hidden").addClass("show");
			// add overlay
			$(this).siblings(".overview-tile-4").addClass("show").removeClass("hidden");
			// if dislike is already chosen, reverse it
			if ($(this).siblings(".dislike-style-chosen").hasClass("show")) {
				$(this).siblings(".dislike-style-chosen").removeClass("show").addClass("hidden");
			}
			if ($(this).siblings(".dislike-style").hasClass("hidden")) {
				$(this).siblings(".dislike-style").removeClass("hidden").addClass("show");
			}
		}
		$.ajax({
		  type: "POST",
		  url: "/users/update_styles_preferences/like-" + this_style_id
		});
		// prevent page from jumping to the top after click event
		return false;
	});
	
	// search for drinks to add to supply
	$(document).on("keyup", ".supply-drink-search", function() {
		value = $(this).val();
		delay(function(){
			$.ajax({
			  type: "GET",
			  url: "/users/drink_search/1/" + value
			});
	    }, 500 );
	});
	
	// allow user to reverse like of beer style
	$(".like-style-chosen").on("click", function() {
		var this_style_id = $(this).parent().attr('id');
		if ($(this).hasClass("show")) {
			$(this).removeClass("show").addClass("hidden");
			$(this).siblings(".like-style").removeClass("hidden").addClass("show");
			// remove overlay
			$(this).siblings(".overview-tile-4").removeClass("show").addClass("hidden");
		}
		$.ajax({
		  type: "POST",
		  url: "/users/update_styles_preferences/neutral-" + this_style_id
		});
		// prevent page from jumping to the top after click event
		return false;
	});
	
	// change drink cooler status
	$(document).on("click", ".change-cooler-button", function() {
		// hide this button
		$(this).addClass('hidden');
		//show the remove version of button
		$(this).siblings('*[id*=cooler]').removeClass('hidden');
		// get id of button
		var this_id = $(this).attr('id');
		// send info to controller
		$.ajax({
		  type: "POST",
		  url: "/users/change_supply_drink/" + this_id
		});
		// prevent page from jumping to the top after click event
		return false;
	});
	
	// change drink cellar status
	$(document).on("click", ".change-cellar-button", function() {
		// hide this button
		$(this).addClass('hidden');
		//show the remove version of button
		$(this).siblings('*[id*=cellar]').removeClass('hidden');
		// get id of button
		var this_id = $(this).attr('id');
		// send info to controller
		$.ajax({
		  type: "POST",
		  url: "/users/change_supply_drink/" + this_id
		});
		// prevent page from jumping to the top after click event
		return false;
	});
	// find width of style preference overview tile
	style_width = $(".overview-tile-3").width();
	half_style_width = style_width/2;
	// make width of selected style overlay equal that of the overview tile
	$(".overview-tile-4").width(style_width);
	// make width of style preference row equal that of the overview tile
	$(".like-style-chosen").width(style_width);
	$(".dislike-style-chosen").width(style_width);
	// make chosen preference appear in middle of tile regardless of tile size
	$(".dislike-style-chosen").children(".dislike-style-middle").css("left",style_width - half_style_width - 18);
	$(".like-style-chosen").children(".like-style-middle").css("left",style_width - half_style_width - 18);
	
	// find width of style preference overview tile for mobile
	mobile_style_width = $(".row-horizon").children(".mobile.style-tile-container").width();
	half_style_width = mobile_style_width/2;
	// make width of selected style overlay equal that of the overview tile
	$(".mobile.overview-tile-4").width(mobile_style_width);
	// make width of style preference row equal that of the overview tile
	$(".mobile.like-style-chosen").width(mobile_style_width);
	$(".mobile.dislike-style-chosen").width(mobile_style_width);
	// make chosen preference appear in middle of tile regardless of tile size
	$(".mobile.dislike-style-chosen").children(".mobile.dislike-style-middle").css("left",mobile_style_width - half_style_width - 18);
	$(".mobile.like-style-chosen").children(".mobile.like-style-middle").css("left",mobile_style_width - half_style_width - 18);
	
	// find width of the navbar search input box
	navbar_search_width = $("#header-navbar").children(".input-group").width() + 20;
	// make the dropdown search result box match the width of the search input box
	$(".tt-menu").width(navbar_search_width);
	
	// add hover effect to drink preferences page
	$(document).on("mouseover", ".drink-preference-view-option", function() {
		$(this).addClass("almost-chosen");
	});
	
	// add hover effect to drink preferences page
	$(document).on("mouseout", ".drink-preference-view-option", function() {
		$(this).removeClass("almost-chosen");
	});
	
	// to add already used descriptor to this user's list of descriptors for drink type
	$(document).on("click", ".token-input-list-facebook_rating li", function() {
		var target_id = $(this).parent().siblings('form').children('input.form-control').attr('id');
		var target = "#" + target_id
		$(this).addClass("hide");
		var descriptor = $(this).children('p').html();
		$(target).tokenInput("add", {id: descriptor, name: descriptor});
		return false;
	});
	
	$( ".add-descriptors-field" ).each(function() {
	  var this_id = $(this).attr('id');
	  $("#" + this_id).tokenInput('/beers/descriptors.json', {
			theme: 'facebook',
			tokenLimit: 5,
			placeholder: 'Choose from list or add your own (separate w/comma)',
			minChars: 2,
		    allowFreeTagging: true,
		    preventDuplicates: true,
		    zindex: 9999,
		    hintText: 'Type drink descriptor (e.g. citrusy, piney, etc.)',
		    prePopulate: $("#" + this_id).data('load')
		});
	});
	
	// default word cloud if no descriptors exist 
	var word_array = [
          {text: "descriptors", weight: 15},
          {text: "no", weight: 7},
          {text: "yet", weight: 4},
          // ...as many words as you want
      ];
 
	 // descriptor clouds for drink types
	 if (gon.drink_type_descriptor_array != undefined) {
			 // create word cloud and return to view
		     for (i = 0; i < gon.drink_type_descriptor_array.length; i++) { 
			    if ( gon.drink_type_descriptor_array[i][1].length > 0 ) {
				    $("#drink_type_"+gon.drink_type_descriptor_array[i][0]).jQCloud(gon.drink_type_descriptor_array[i][1], {
				  		autoResize: true
				     });
				 } else {
					$("#drink_type_"+gon.drink_type_descriptor_array[i][0]).jQCloud(word_array, {
				  		autoResize: true
				     });
				 }
			 }
	 } else if (gon.drink_descriptor_array != undefined) {
			 // create word cloud and return to view
		     for (i = 0; i < gon.drink_descriptor_array.length; i++) { 
			    if ( gon.drink_descriptor_array[i][1].length > 0 ) {
				    $("#drink_"+gon.drink_descriptor_array[i][0]).jQCloud(gon.drink_descriptor_array[i][1], {
				  		autoResize: true
				     });
				 } else {
					$("#drink_"+gon.drink_descriptor_array[i][0]).jQCloud(word_array, {
				  		autoResize: true
				     });
				 }
			 }
	 } else {
	 	return;
	 }
});
