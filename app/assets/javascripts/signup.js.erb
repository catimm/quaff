$(function() {
	
	// show welcome modal before starting signup process
	if (gon.getting_started_step == 0) {
		$(window).load(function(){
	        $('#complete_signup_welcome').modal('show');
	    });
	}
	
	// show modal to confirm delivery request was made 
	if (gon.request == true) {
		$(window).load(function(){
	        $('#delivery_request_signup_confirmation').modal('show');
	    });
	}
	
	// show modal for 1st step of settings for those with a new plan 
	if (gon.new_plan_step_one == true) {
		$(window).load(function(){
	        $('#new_plan_step_one').modal('show');
	    });
	}
	
	// check plans associated with zip code
	$(document).on('click', '.find-plans-zip-code-button.signup', function () {
	   var zipCode = $('#check-zip-code').val();
       $.ajax({
		  type: "GET",
		  url: "/signup/process_zip_code_response/" + zipCode
		});
		// prevent page from jumping to the top after click event
		return false;
	}); 
	
	// get height of plan option rows
	var features_setup_height = $(".membership-plan-feature-setup").height();
	var features_shown_height = $(".membership-plan-feature-shown").height();
	$(".membership-plan-feature-setup-holder").height(features_setup_height);
	$(".membership-plan-feature-shown-holder").height(features_shown_height);
	
	// use Modernizr to add datepicker view to browsers that don't support date
	if (!Modernizr.inputtypes.date) {
	  $("input[type='date']").datepicker();
	}

	// set up use of tooltip within a link
	$('[data-tooltip="tooltip"]').tooltip();
	
	// set default for unsaved form monitoring
	var unsaved = false;
	
	// hide spinner
	$(".spinner-signup").hide();
	
	// show spinner on AJAX start
	$(document).ajaxStart(function(){
	  $(".spinner-signup").show(0);
	});
	
	// hide spinner on AJAX stop
	$(document).ajaxStop(function(){
	  $(".spinner-signup").delay(500).hide(0);
	});
  
  	// set height of style tiles in likes/dislikes views to equal width
	style_tile_width = $(".signup-style-tile").width();
	$(".signup-style-tile").height(style_tile_width);
	$(".signup-style-tile.chosen").height(style_tile_width);
	$(".signup-styles-tally-box").height(style_tile_width);
	
	
	// set height of mobile user signup filler column
	first_col_height = $("#mobile-user-signup-first-col").height();
	$(".mobile-user-signup-filler-col").height(first_col_height);
	
	$( window ).on( "orientationchange", function( event ) {
		style_tile_width = $(".signup-style-tile").width();
		$(".signup-style-tile").height(style_tile_width);
		$(".signup-style-tile.chosen").height(style_tile_width);
		$(".signup-style-tile.chosen").width(style_tile_width);
		$(".signup-styles-tally-box").height(style_tile_width);
	});
	
	// set height of membership feature list div
	feature_list_height_12_mo = $("#retail-plan-feature-list-12-mo").height();
	$(".retail-plan-feature-list").height(feature_list_height_12_mo);
	
  // set delay function
	var delay = (function(){
	  var timer = 0;
	  return function(callback, ms){
	    clearTimeout (timer);
	    timer = setTimeout(callback, ms);
	  };
	})();
	
	// search for username to see if unique
	$(document).on("keyup", "#username_field", function() {
		if ($(".user_username").hasClass('has-error')) {
			$(".user_username").removeClass('has-error');
			$(".user_username").children('span').remove();
		}
		if ($("#username-not-available").hasClass('show')) {
			$("#username-not-available").removeClass('show').addClass('hidden');
		}
		if ($("#username-available").hasClass('show')) {
			$("#username-available").removeClass('show').addClass('hidden');
		}
		
		delay(function(){
			value = $('#username_field').val();
			$.ajax({
			  type: "POST",
			  url: "/signup/username_verification/" + value
			});
	    }, 2000 );
	});
	
	// remove email signup error message upon focus
	$(document).on("focus", "#email_field", function() {
		if ($('.user_email').hasClass('has-error')) {
			$('.user_email').removeClass('has-error');
			$('.user_email').children('span').remove();
		}
	});
	
	// clear invalid response 
	$(document).on("keyup", "#special_code", function() {
		if ($("#invalid_code").hasClass('show')) {
			$("#invalid_code").removeClass('show').addClass('hidden');
		}
	});

	// bind event to page navigation
	$(window).bind('beforeunload', function() {
	    if(unsaved){
	        return "You have unsaved changes on this page. Do you want to leave this page and discard your changes or stay on this page?";
	    }
	});
	
	// find width of tile so overlay matches
	var like_tile_width = $('.signup-style-tile.like-style-tile').width();
	$('.signup-style-tile.like-style-tile.chosen').width(like_tile_width);
	var dislike_tile_width = $('.signup-style-tile.dislike-style-tile').width();
	$('.signup-style-tile.dislike-style-tile.chosen').width(dislike_tile_width);

	
	// add logic to change background color of image chosen and send data to controller
	$(document).on('click', '.signup-category-image-holder', function () {
		$(this).siblings('.signup-category-image-holder-chosen-cover').removeClass('hidden').addClass('show');
		$(this).parent().siblings('.signup-category-image-holder-parent').children('.signup-category-image-holder-chosen-cover').removeClass('show').addClass('hidden');
		
		var id_info = $(this).attr('id');
		var id_split = id_info.split('-');
		var choice = id_split[0];
		var current_page = id_split[1];
		
		if (choice == "beer") {
			var new_value = 1
		} else if (choice == "cider") {
			var new_value = 2
		} else {
			var new_value = 3
		}
		
		if(current_page == "signup") {
			// send data to controller
			$.ajax({
			  type: "POST",
			  url: "/signup/process_drink_choice_getting_started/" + new_value
			});
			
			$('#drink_choice_next_step_button').removeAttr('disabled');
			$("#drink_choice_next_step_button").removeClass('btn-default').addClass('btn-success');
		} 
		else if(current_page == "orders") {
			var drink_type = "Beer";
			if (new_value == 2) {
				drink_type = "Cider";
			}
			else if (new_value == 3) {
				drink_type = "Beer & Cider";
			}
			$('#order-drink-type-text').text(drink_type);
			$('#order_drink_option_id').val(new_value);
		}
		else {
			// send data to controller
			$.ajax({
			  type: "POST",
			  url: "/delivery_settings/deliveries_update_estimates/drink_choice-" + new_value
			});
		}
	});
	
	$(document).on('click', '.signup-journey-image-holder', function () {
		$(this).siblings('.signup-journey-image-holder-chosen-cover').removeClass('hidden').addClass('show');
		$(this).parent().siblings('.signup-journey-image-holder-parent').children('.signup-journey-image-holder-chosen-cover').removeClass('show').addClass('hidden');
		
		var id_info = $(this).attr('id');
		var id_split = id_info.split('-');
		var choice = id_split[0];
		var current_page = id_split[1];
		
		if (choice == "casual") {
			var new_value = 1
		} else if (choice == "geek") {
			var new_value = 2
		} else {
			var new_value = 3
		}
		
		if(current_page == "signup") {
			var controller_url = "/signup/process_drink_journey_getting_started." + new_value
			
			$('#drink_journey_next_step_button').removeAttr('disabled');
			$("#drink_journey_next_step_button").removeClass('btn-default').addClass('btn-success');
		} else {
			var controller_url = "/delivery_settings/deliveries_update_estimates/craft_journey-" + new_value
		}
		
		// send data to controller
		$.ajax({
		  type: "POST",
		  url: controller_url
		});
	});
	
	$(document).on('click', '#delivery_preference_gluten_free', function () {
		
		var this_value = $(this).val();
		if(this_value == 1){
			new_value = 0;
			$(this).val(0);
		} else {
			new_value = 1;
			$(this).val(1);
		}
		// send data to controller
		$.ajax({
		  type: "POST",
		  url: "/signup/process_drink_style_likes_getting_started." + new_value
		});
	});
	
	$(document).on('click', '.signup-plan-start-holder', function () {
		$(this).siblings('.signup-plan-start-holder-chosen-cover').removeClass('hidden').addClass('show');
		$(this).parent().siblings('.signup-plan-start-holder-parent').children('.signup-plan-start-holder-chosen-cover').removeClass('show').addClass('hidden');
		
		var id_info = $(this).attr('id');
		var id_split = id_info.split('-');
		var start_choice = id_split[0];
		var current_page = id_split[1];
		
		if(current_page == "signup") {
			// send data to controller
			$.ajax({
			  type: "POST",
			  url: "/signup/process_input/account-2-" + start_choice
			});
		} else {
			$('#delivery_preference_first_delivery_date').val(new_value);
		}
		
	});
	
	// add logic to change background color of number boxes and send data to controller
	$(document).on('click', '.number-box-holder.large-format', function () {
		$(this).addClass('chosen');
		$(this).parent().siblings('.number-box-holder-parent').children('.number-box-holder').removeClass('chosen');
		
		var id_info = $(this).attr('id');
		var id_split = id_info.split('-');
		var large_format = id_split[0];
		var current_page = id_split[1];
		
		var drinks_per_week_original = $(".number-box-holder.weekly-drinks.chosen").attr('id');
		if(drinks_per_week_original != undefined) {
			var split_original = drinks_per_week_original.split('-');
			var drinks_per_week = split_original[0];
			var small_format = drinks_per_week
		}
		
		if(current_page == "signup") {
			var controller_url = "/signup/process_drinks_large_getting_started/" + large_format
		} 
		else if (current_page == "orders") {
			var controller_url = "";
			// should_remove $("#order_number_of_large_drinks").val(large_format);
			// should_remove $("#large_drink_number").text(large_format);
			// should_remove $("#small_drink_number").text(small_format);
			$(".preference-estimate-signs").removeClass("hidden").addClass("show");
			setOrderEstimate();
		}
		else {
			$("#delivery_preference_max_large_format").val(large_format);
			var controller_url = "/delivery_settings/deliveries_update_estimates/large_format-" + drinks_per_week + "-" + large_format
		}
		
		// send data to controller to update delivery preferences
		// only for signup and delivery preferences page.
		if (controller_url != "") {
			// send data to controller
			$.ajax({
				type: "POST",
				url: controller_url
			});
		}
	});
	
	
	
	// logic to chose shipping frequency
	$(document).on('click', '.shipping-frequency-holder', function () {
		$(this).addClass("chosen");
		$(this).parent().siblings().children('.shipping-frequency-holder').removeClass("chosen");
		
		// find which page this is from
		var this_id = $(this).attr('id');
		var this_id_split = this_id.split('-');
		var this_page = this_id_split[1]
		var id_info = $(this).children('.shipping-frequency-weeks-number').attr('id');
		var id_split = id_info.split('-');
		var frequency_choice = id_split[0];

		if (this_page == "preferences") {
			$.ajax({
			  type: "POST",
			  url: "/shipment_settings/update_frequency_choice/" + frequency_choice
			});
		} else {
			$.ajax({
			  type: "POST",
			  url: "/signup/process_shipping_frequency_getting_started/" + frequency_choice
			});
		}
				
	});
	
	// logic to chose first shipping date
	$(document).on('click', '.shipping-delivery-date-change-row', function () {
		$(this).addClass("chosen");
		$(this).siblings().removeClass("chosen");
		
		// find which page this is from
		var date_chosen = $(this).attr('id');

		$.ajax({
		  type: "POST",
		  url: "/signup/process_shipping_first_date_chosen/" + date_chosen
		});		
	});
	
	// keep track of how many styles have been chosen
	var styles_liked = gon.number_of_liked_styles;
	var styles_disliked = gon.number_of_disliked_styles;
	
	// add logic to change background color of style chosen and send data to controller
	$(document).on('click', '.signup-style-tile.like-style-tile', function () {
		if($(this).siblings('.signup-style-tile.like-style-tile.chosen').hasClass('hidden')) {
			if(styles_liked <= 5) {
				styles_liked = styles_liked + 1;
			}
			if(styles_liked == 1) {
				$("#liked_styles_next_step_button").removeAttr('disabled');
				$("#liked_styles_next_step_button").addClass('btn-success');
			}
			if(styles_liked <= 5) {
				// display number of liked styles
				$("#number_of_liked_styles").html(styles_liked);
				// find width of tile so overlay matches
				var original_tile_width = $(this).width();
				$(this).siblings('.signup-style-tile.like-style-tile.chosen').width(original_tile_width);
				$(this).siblings('.signup-style-tile.like-style-tile.chosen').removeClass('hidden').addClass('show');
				
				var style_id = $(this).attr('id');
				
				// send data to controller
				$.ajax({
				  type: "POST",
				  url: "/signup/process_style_input/like-add-" + style_id
				});
			} else {
				styles_liked = styles_liked - 1;
				
				$("#max_likes").modal("show");
			}
		} else {
			styles_liked = styles_liked - 1;
			// display number of liked styles
			$("#number_of_liked_styles").html(styles_liked);
			
			$(this).removeClass('show').addClass('hidden');
			
			var style_id = $(this).attr('id');
			
			// send data to controller
			$.ajax({
			  type: "POST",
			  url: "/signup/process_style_input/like-remove-" + style_id
			});
			
			// remove button functionality if fewer than one like
			if(styles_liked < 1) {
				$("#liked_styles_next_step_button").attr('disabled', 'disabled');
				$("#liked_styles_next_step_button").removeClass('btn-success');
			}
		}
	});
	
	$(document).on('click', '.signup-style-tile.dislike-style-tile', function () {
		if($(this).siblings('.signup-style-tile.dislike-style-tile.chosen').hasClass('hidden')) {
			if(styles_disliked <= 5) {
				styles_disliked = styles_disliked + 1;
			}
			if(styles_disliked <= 5) {
				// display number of liked styles
				$("#number_of_disliked_styles").html(styles_disliked);
				// find width of tile so overlay matches
				var original_tile_width = $(this).width();
				$(this).siblings('.signup-style-tile.dislike-style-tile.chosen').width(original_tile_width);
				$(this).siblings('.signup-style-tile.dislike-style-tile.chosen').removeClass('hidden').addClass('show');
				
				var style_id = $(this).attr('id');
				
				// send data to controller
				$.ajax({
				  type: "POST",
				  url: "/signup/process_style_input/dislike-add-" + style_id
				});
			} else {
				styles_disliked = styles_disliked - 1;
				alert("You can only choose 5!");
			}
		} else {
			styles_disliked = styles_disliked - 1;
			// display number of disliked styles
			$("#number_of_disliked_styles").html(styles_disliked);
			
			$(this).removeClass('show').addClass('hidden');
			
			var style_id = $(this).attr('id');
			
			// send data to controller
			$.ajax({
			  type: "POST",
			  url: "/signup/process_style_input/dislike-remove-" + style_id
			});

		}
	});
});